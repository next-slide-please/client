name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            artifact: target/release/client
            desired_name: ./NextSlidePlease
            zip_name: Linux.zip
          - os: windows-latest
            artifact: target/release/client.exe
            desired_name: ./NextSlidePlease.exe
            zip_name: Windows.zip
          - os: macos-latest
            artifact: target/debug/bundle/osx/NextSlidePlease.app
            desired_name: ./NextSlidePlease.app
            zip_name: macOS.zip

    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - uses: Swatinem/rust-cache@v1

    - name: "Prepare: Install dependencies (Linux)"
      if: ${{ runner.os == 'Linux' }}
      run: sudo apt-get update && sudo apt-get install libssl-dev libudev-dev libgtk-3-dev

    - name: "Prepare: Install `cargo bundle` (macOS)"
      run: cargo install cargo-bundle
      if: ${{ runner.os == 'macOS' }}

    - name: Build (Window / Linux)
      run: cargo build --verbose --release
      if: ${{ runner.os != 'macOS' }}

    - name: Build app bundle (macOS)
      run: cargo bundle --release
      if: ${{ runner.os == 'macOS' }}

    - name: Rename build artifact
      shell: bash
      run: mv ${{ matrix.artifact }} ${{ matrix.desired_name }}

    - uses: papeloto/action-zip@7a2f79e6d5dcf17f78109dc6eb81e74526069175
      with:
        files: ${{ matrix.desired_name }}
        dest: ${{ matrix.zip_name }}

    - name: Upload build
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}
        path: ${{ matrix.zip_name }}

  release:
    name: Create Github Release
    if: contains(github.ref, 'refs/tags/v')
    needs: [build]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/download-artifact@v2

    - name: List contents
      run: ls -lhR

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true

    - name: Upload release assets (Linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Linux/Linux.zip
        asset_name: Linux.zip
        asset_content_type: application/zip

    - name: Upload release assets (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Windows/Windows.zip
        asset_name: Windows.zip
        asset_content_type: application/zip

    - name: Upload release assets (macOS)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./macOS/macOS.zip
        asset_name: macOS.zip
        asset_content_type: application/zip

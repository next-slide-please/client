name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - uses: Swatinem/rust-cache@v1

    - name: "Prepare: Install dependencies (Linux)"
      if: ${{ runner.os == 'Linux' }}
      run: sudo apt-get update && sudo apt-get install libssl-dev libudev-dev libgtk-3-dev

    - name: "Prepare: Install `cargo bundle` (macOS)"
      run: cargo install cargo-bundle
      if: ${{ runner.os == 'macOS' }}

    - name: Build (Window / Linux)
      run: cargo build --verbose --release
      if: ${{ runner.os != 'macOS' }}

    - name: Build app bundle (macOS)
      run: cargo bundle --release
      if: ${{ runner.os == 'macOS' }}

    - name: Zip app bundle (macOS)
      if: ${{ runner.os == 'macOS' }}
      working-directory: target/debug/bundle/osx/
      run: zip -r NextSlidePlease.zip .

    - name: Upload build (macOS)
      if: ${{ runner.os == 'macOS' }}
      uses: actions/upload-artifact@v2
      with:
        name: macOS
        path: target/debug/bundle/osx/NextSlidePlease.zip

    - name: Upload build (Windows)
      if: ${{ runner.os == 'Windows' }}
      uses: actions/upload-artifact@v2
      with:
        name: Windows
        path: target/release/client.exe

    - name: Upload build (Linux)
      if: ${{ runner.os == 'Linux' }}
      uses: actions/upload-artifact@v2
      with:
        name: Linux
        path: target/release/client
